{"version":3,"file":"test_connection.min.js","sources":["../src/test_connection.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for testing the connection to the NAAS server.\n *\n * @module     mod_naas/test_connection\n * @copyright  2023 NAAS Team\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine('mod_naas/test_connection', ['jquery', 'core/ajax', 'core/str'], function($, Ajax, Str) {\n    return {\n        init: function() {\n            $('#testconnection').on('click', function(e) {\n                e.preventDefault();\n                const resultDiv = $('#connection-result');\n                resultDiv.hide().removeClass();\n\n                // Pre-fetch strings we'll need\n                const successStringPromise = Str.get_string('connection_test_success', 'naas');\n                const failedStringPromise = Str.get_string('connection_test_failed', 'naas');\n\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/naas/proxy.php',\n                    type: 'GET',\n                    data: {\n                        path: '/nuggets/search?is_default_version=true&page_size=6&fulltext='\n                    },\n                    success: function(response) {\n                        const parsedResponse = JSON.parse(response);\n\n                        if (parsedResponse.success) {\n                            successStringPromise.done(function(successString) {\n                                resultDiv.addClass(\"alert alert-success\").text(successString);\n                                resultDiv.show();\n                            }).fail(function() {\n                                // Fallback if string loading fails\n                                resultDiv.addClass(\"alert alert-success\").text('Success!');\n                                resultDiv.show();\n                            });\n                        } else {\n                            failedStringPromise.done(function(failedString) {\n                                resultDiv.addClass(\"alert alert-danger\").html(\n                                    '<p>' + failedString + '</p><code>' + response + '</code>'\n                                );\n                                resultDiv.show();\n                            }).fail(function() {\n                                // Fallback if string loading fails\n                                resultDiv.addClass(\"alert alert-danger\").html(\n                                    '<p>Failed!</p><code>' + response + '</code>'\n                                );\n                                resultDiv.show();\n                            });\n                        }\n                    },\n                    error: function(xhr, status, error) {\n                        failedStringPromise.done(function(failedString) {\n                            resultDiv.addClass(\"alert alert-danger\").html(\n                                `<p>${failedString}</p><p>${error}</p>`\n                            );\n                            resultDiv.show();\n                        }).fail(function() {\n                            // Fallback if string loading fails\n                            resultDiv.addClass(\"alert alert-danger\").html(\n                                `<p>Failed!</p><p>${error}</p>`\n                            );\n                            resultDiv.show();\n                        });\n                    }\n                });\n            });\n        }\n    };\n});\n"],"names":["define","$","Ajax","Str","init","on","e","preventDefault","resultDiv","hide","removeClass","successStringPromise","get_string","failedStringPromise","ajax","url","M","cfg","wwwroot","type","data","path","success","response","JSON","parse","done","successString","addClass","text","show","fail","failedString","html","error","xhr","status"],"mappings":";;;;;;;AAuBAA,kCAAmC,CAAC,SAAU,YAAa,aAAa,SAASC,EAAGC,KAAMC,WAC/E,CACHC,KAAM,WACFH,EAAE,mBAAmBI,GAAG,SAAS,SAASC,GACtCA,EAAEC,uBACIC,UAAYP,EAAE,sBACpBO,UAAUC,OAAOC,oBAGXC,qBAAuBR,IAAIS,WAAW,0BAA2B,QACjEC,oBAAsBV,IAAIS,WAAW,yBAA0B,QAErEX,EAAEa,KAAK,CACHC,IAAKC,EAAEC,IAAIC,QAAU,sBACrBC,KAAM,MACNC,KAAM,CACFC,KAAM,iEAEVC,QAAS,SAASC,UACSC,KAAKC,MAAMF,UAEfD,QACfX,qBAAqBe,MAAK,SAASC,eAC/BnB,UAAUoB,SAAS,uBAAuBC,KAAKF,eAC/CnB,UAAUsB,UACXC,MAAK,WAEJvB,UAAUoB,SAAS,uBAAuBC,KAAK,YAC/CrB,UAAUsB,UAGdjB,oBAAoBa,MAAK,SAASM,cAC9BxB,UAAUoB,SAAS,sBAAsBK,KACrC,MAAQD,aAAe,aAAeT,SAAW,WAErDf,UAAUsB,UACXC,MAAK,WAEJvB,UAAUoB,SAAS,sBAAsBK,KACrC,uBAAyBV,SAAW,WAExCf,UAAUsB,WAItBI,MAAO,SAASC,IAAKC,OAAQF,OACzBrB,oBAAoBa,MAAK,SAASM,cAC9BxB,UAAUoB,SAAS,sBAAsBK,kBAC/BD,+BAAsBE,eAEhC1B,UAAUsB,UACXC,MAAK,WAEJvB,UAAUoB,SAAS,sBAAsBK,gCACjBC,eAExB1B,UAAUsB"}