{"version":3,"file":"test_connection.min.js","sources":["../src/test_connection.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript module to test connection to NAAS API.\n *\n * @copyright  2023 ISAE-SUPAERO (https://www.isae-supaero.fr/)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine('mod_naas/test_connection', ['jquery', 'core/ajax', 'core/str'], function($, Ajax, Str) {\n    return {\n        init: function() {\n            $('#testconnection').on('click', function(e) {\n                e.preventDefault();\n                const resultDiv = $('#connection-result');\n                resultDiv.hide().removeClass();\n\n                // Pre-fetch strings we'll need\n                const successStringPromise = Str.get_string('connection_test_success', 'naas');\n                const failedStringPromise = Str.get_string('connection_test_failed', 'naas');\n\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/naas/proxy.php',\n                    type: 'GET',\n                    data: {\n                        path: '/nuggets/search?is_default_version=true&page_size=6&fulltext='\n                    },\n                    success: function(response) {\n                        const parsedResponse = JSON.parse(response);\n\n                        if (parsedResponse.success) {\n                            successStringPromise.done(function(successString) {\n                                resultDiv.addClass(\"alert alert-success\").text(successString);\n                                resultDiv.show();\n                            }).fail(function() {\n                                // Fallback if string loading fails\n                                resultDiv.addClass(\"alert alert-success\").text('Success!');\n                                resultDiv.show();\n                            });\n                        } else {\n                            failedStringPromise.done(function(failedString) {\n                                resultDiv.addClass(\"alert alert-danger\").html(\n                                    '<p>' + failedString + '</p><code>' + response + '</code>'\n                                );\n                                resultDiv.show();\n                            }).fail(function() {\n                                // Fallback if string loading fails\n                                resultDiv.addClass(\"alert alert-danger\").html(\n                                    '<p>Failed!</p><code>' + response + '</code>'\n                                );\n                                resultDiv.show();\n                            });\n                        }\n                    },\n                    error: function(xhr, status, error) {\n                        failedStringPromise.done(function(failedString) {\n                            resultDiv.addClass(\"alert alert-danger\").html(\n                                `<p>${failedString}</p><p>${error}</p>`\n                            );\n                            resultDiv.show();\n                        }).fail(function() {\n                            // Fallback if string loading fails\n                            resultDiv.addClass(\"alert alert-danger\").html(\n                                `<p>Failed!</p><p>${error}</p>`\n                            );\n                            resultDiv.show();\n                        });\n                    }\n                });\n            });\n        }\n    };\n});\n"],"names":["define","$","Ajax","Str","init","on","e","preventDefault","resultDiv","hide","removeClass","successStringPromise","get_string","failedStringPromise","ajax","url","M","cfg","wwwroot","type","data","path","success","response","parsedResponse","JSON","parse","done","successString","addClass","text","show","fail","html","failedString","error","xhr","status"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,sBAAuB,CAAC,QAAS,WAAY,UAAW,SAASC,CAAE,CAACC,IAAK,CAACC,GAAI,CAAE,CAClF,MAAO,CACH,IAAK,CAAE,UAAW,CACdF,CAAC,CAAC,gBAAiB,CAACE,EAAG,CAAC,OAAQ,CAAEC,SAAUC,CAAE,CAAE,CAC5CA,CAAE,CAACC,cAAe,EAAG,CACrB,KAAMC,CAAAA,SAAU,CAAGN,CAAC,CAAC,mBAAoB,CAC7CM,SAAU,CAACC,IAAK,EAAG,CAACC,WAAY,EAAG,CAEnC,KAAMC,CAAAA,mBAAoB,CAAGP,GAAI,CAACQ,UAAW,CAAC,uBAAwB,CAAE,MAAO,CAC/E,KAAMC,CAAAA,kBAAmB,CAAGT,GAAI,CAACQ,UAAW,CAAC,sBAAuB,CAAE,MAAO,CAE7EV,CAAC,CAACY,IAAK,CAAC,CACJ,GAAI,CAAEC,CAAG,CAACC,GAAI,CAACC,OAAQ,CAAG,qBAAsB,CACpD,IAAK,CAAE,KAAM,CACb,IAAK,CAAE,CACHC,IAAK,CAAE,8DAA+D,CAC1E,CACA,OAAQ,CAAEC,SAAUC,QAAS,CAAE,CAC3B,KAAMC,CAAAA,cAAe,CAAGC,IAAK,CAACC,KAAM,CAACH,QAAS,CAAE,CAEhD,GAAIC,cAAe,CAACF,OAAQ,CAAE,CACxBN,mBAAoB,CAACW,IAAK,CAAEC,SAAcA,CAAc,CAAE,CACtDjB,SAAU,CAACkB,QAAS,CAAC,qBAAsB,CAAEC,IAAK,CAACF,cAAe,CAAE,CACpEjB,SAAU,CAACoB,IAAK,EAAG,CACvB,CAAE,CAACC,IAAK,CAAE,UAAW,CACjBrB,SAAU,CAACkB,QAAS,CAAC,qBAAsB,CAAEC,IAAK,CAAC,UAAW,CAAE,CAChEnB,SAAU,CAACoB,IAAK,EAAG,CACvB,CAAE,CACF,CACIb,kBAAmB,CAACU,IAAK,CAAEK,SAAcA,CAAa,CAAE,CAClDtB,SAAU,CAACkB,QAAS,CAAC,oBAAqB,CAAEK,IAAK,CAC7C,KAAO,CAACD,aAAc,CAAG,WAAY,CAACX,QAAS,CAAG,SAAU,CAC5D,CACAH,SAAU,CAACoB,IAAK,EAAG,CACvB,CAAE,CAACC,IAAK,CAAE,UAAW,CACjBrB,SAAU,CAACkB,QAAS,CAAC,oBAAqB,CAAEK,IAAK,CACjD,2BAA6BI,KAAO,CAAE,CAClC,CACX,SAAU,CAACoB,IAAK,EAAG,CACvB,CAAE,CACN,CACJ,CAAE,CACL,CAAE,CACN,CAAC,CACL,CACJ,CACJ,CAAC"}